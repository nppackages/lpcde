// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_sum
double rcpp_sum(arma::colvec v);
RcppExport SEXP _lpcde_rcpp_sum(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sum(v));
    return rcpp_result_gen;
END_RCPP
}
// print_all_sumC
std::vector<std::vector<int>> print_all_sumC(int target);
RcppExport SEXP _lpcde_print_all_sumC(SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(print_all_sumC(target));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lpcde_rcpp_sum", (DL_FUNC) &_lpcde_rcpp_sum, 1},
    {"_lpcde_print_all_sumC", (DL_FUNC) &_lpcde_print_all_sumC, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_lpcde(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
